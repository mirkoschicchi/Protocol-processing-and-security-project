project ProtProj "Protocol Processing and Security Project"  2019-11-06 - 2019-12-20 {
    timezone "Europe/Helsinki"
    timeformat "%Y-%m-%d"
    numberformat "-" "" " " "." 1
    now 2019-11-06
    workinghours mon - sun 10:00 - 12:00 # 14h per person + weekly meeting
    outputdir "dist/"
}

resource team "Project Team" {
    resource sim "Simulator team" {
        resource ste "Stephan Hauser"
    }
    resource net "Networking team" {
        resource fil "Filippo Piconese"
    }
    resource bgp "Routing team" {
        resource mir "Mirko Schicchi"
        resource gab "Gabriele Orazi"
    }
}

task project "Project" {
    task sim "Simulation Infrastructure" {
        allocate sim
        task intf "Define interfaces and write example tests" { effort 6h }
        task base "Implement basic version (L2 connectivity to hard-coded routers)" { effort 8h }
        task net "Implement network simulator to test sending and receiving packets" { effort 8h }
        task conf "Implement file based custom network topologies" { effort 12h }
        task pcap "Implement PCAP export for whole system" { effort 8h }
    }
    task net "TCP/IP network infrastructure" {
        allocate net
        task intf "Define interfaces and write example tests" { effort 8h }
        task ipv6 "IPv6 protocol" {
            task parser "IPv6 Package format parser" { effort 4h }
            task generator "IPv6 Package generator" { effort 4h }
        }
        task tcp "TCP protocol" {
            depends !ipv6
            task parser "IPv6 Package format parser" { effort 4h }
            task generator "IPv6 Package generator" { effort 4h }
        }
    }
    task bgp "BGP protocol and routers" {
        allocate bgp
        task bgp6 "BGP6 protocol implementation" {
            task intf "Define interfaces and write example tests" { effort 6h }
            task parser "BGP6 protocol parser" { effort 4h }
            task generator "BGP6 protocol generator" { effort 4h }
        }
        task router "Router implementation" {
            task bgp6 "BGP6 handling" {
                task state "State machine" { effort 8h }
                task open "Open message" { effort 4h }
                task update "Update message" { effort 8h }
                task notification "Notification message" { effort 6h }
                task keepalive "Keep-alive message" { effort 2h }
                task refresh "Route-Refresh message" { effort 2h }
            }
            task routing "IP routing" {
                task table "Routing table implementation" { effort 2h }
                task ip "IP routing implementation" { effort 6h }
            }
        }
    }
    task ms "Milestones" {
        task ms1 "MS1: Review basic interfaces" {
            depends !!sim.intf, !!net.intf, !!bgp.bgp6.intf
        }
        task ms2 "MS2: Networking infrastructure working" {
            depends !!sim.base, !!sim.net, !!net.ipv6, !!net.tcp, !!bgp.bgp6,
                    !!bgp.router.bgp6, !!bgp.router.routing
        }
        task ms3 "MS3: Implement trust" {
            # todo
        }
        task ms4 "MS4: Implement voting" {
            # todo
        }
        task ms5 "MS5: Implement dual stack" {
            # todo, optional
        }
    }
    task deliveries "Deliveries" {
        task presentation "Project demonstration" {}
        task report "Project report" {}
        task manual "User manual" {}
    }
}

navigator navbar {
  hidereport 0
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='resources'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

textreport frame "" {
  header -8<-
    == TaskJuggler Project Template ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"
  textreport index "Overview" {
    formats html
    center '<[report id="overview"]>'
  }

  textreport "Status" {
    formats html
    center -8<-
      <[report id="status.dashboard"]>
      ----
      <[report id="status.completed"]>
      ----
      <[report id="status.ongoing"]>
      ----
      <[report id="status.future"]>
    ->8-
  }

  textreport "Deliveries" {
    formats html
    center '<[report id="deliveries"]>'
  }

  textreport "ContactList" {
    formats html
    title "Contact List"
    center '<[report id="contactList"]>'
  }

  textreport "ResourceGraph" {
    formats html
    title "Resource Graph"
    center '<[report id="resourceGraph"]>'
  }
}

taskreport overview "" {
  columns bsi { title 'WBS' },
          name, start, end, effort, chart { scale day ${TaskTip} }
  timeformat "%a %Y-%m-%d"
  loadunit hours
  # hideresource 1
  caption 'All effort values are in hours.'
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor plan.alert = 0 "#00D000" # green
  cellcolor plan.alert = 1 "#D0D000" # yellow
  cellcolor plan.alert = 2 "#D00000" # red
]

taskreport status "" {
  columns bsi { width 50 title 'WBS' }, name { width 150 },
          start { width 100 }, end { width 100 },
          effort { width 100 },
          alert { tooltip plan.journal
                          != '' "<-query attribute='journal'->" width 150 },
          status { width 150 }

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
                        listtype bullets
                        listitem "<-query attribute='name'->"
                        start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
    journalmode status_up
    journalattributes headline, author, date, summary, details
    hidetask ~hasalert(0)
    sorttasks alert.down, plan.end.up
    period %{${now} - 1w} +1w
  }
  taskreport completed "" {
    headline "Already completed tasks"
    hidetask ~(plan.end <= ${now})
  }
  taskreport ongoing "" {
    headline "Ongoing tasks"
    hidetask ~((plan.start <= ${now}) & (plan.end > ${now}))
  }
  taskreport future "" {
    headline "Future tasks"
    hidetask ~(plan.start > ${now})
  }
}

# A list of all tasks with the percentage completed for each task
taskreport deliveries "" {
  headline "Project Deliverables"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete,
          chart { ${TaskTip} }
  taskroot project.deliveries
  hideresource 1
}

# A list of all employees with their contact details.
resourcereport contactList "" {
  headline "Contact list and duty plan"
  columns name,
          email { celltext 1 "[mailto:<-email-> <-email->]" },
          managers { title "Manager" },
          chart { scale day }
  hideresource ~isleaf()
  sortresources name.up
  hidetask 1
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  headline "Resource Allocation Graph"
  columns no, name, effort, rate, weekly { ${TaskTip} }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  hidetask ~(isleaf() & isleaf_())
  sorttasks plan.start.up
}

